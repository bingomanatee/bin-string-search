{"version":3,"sources":["bin-string-search.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","binStringSearch","StringDigestor","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_","phrasiphy","pString","compact","split","join","config","codes","concat","DEFAULT_CONFIG","slice","index","strToNum","string","toLowerCase","matches","word","indexOf","push","sortBy","order","keys","phraseToNums","lastKey","last","simplePhrase","first","item","maxIndex","console","log","filter","pText","_this","words","w","indexes","map","uniq","identity","text","flags","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","t","tests","err","int","newInt","data","pParams","_this2","params","phraseIndex","phrase","dataToString","out","reduce","goodItems","trim","summary","max","reverse","set","code","_code","get","NONALPHANUM","NUMERIC","BRACES","PUNCTUATION","SPACE","LEAD1","LEAD2","LEAD3","CAPS","a","b","d","e","f","g","h","j","k","l","n","o","q","r","s","_t","u","v","x","y","z","bre","test","nare","lead1re","lead1re2","lead2re","lead2re2","lead3re","lead3re2","nre","pre","__WEBPACK_AMD_DEFINE_RESULT__","global","addMapEntry","pair","addSetEntry","add","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","arrayConcat","other","othIndex","othLength","result","Array","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseExtremum","current","computed","baseFind","collection","eachFunc","retKey","baseFindIndex","fromRight","fromIndex","indexOfNaN","baseReduce","baseSortBy","comparer","sort","baseSum","baseTimes","baseToPairs","object","baseUnary","baseValues","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","compareAscending","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","compareMultiple","orders","objCriteria","criteria","othCriteria","ordersLength","countHolders","placeholder","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isHostObject","toString","isIndex","reIsUint","MAX_SAFE_INTEGER","iteratorToArray","mapToArray","size","forEach","replaceHolders","PLACEHOLDER","setToArray","stringSize","reHasComplexSymbol","reComplexSymbol","lastIndex","stringToArray","match","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","hashDelete","hash","hashHas","hashGet","nativeCreate","HASH_UNDEFINED","hashSet","MapCache","clear","entry","mapClear","__data__","Map","mapDelete","isKeyable","assocDelete","mapGet","assocGet","mapHas","has","assocHas","mapSet","assocSet","SetCache","cacheHas","cache","cachePush","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assocIndexOf","pop","splice","eq","assignInDefaults","objValue","srcValue","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","source","copyObject","baseAt","paths","isNil","baseCastArrayLikeObject","isArrayLikeObject","baseCastFunction","baseCastPath","stringToPath","baseClamp","number","lower","upper","baseClone","isDeep","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","baseForOwn","subValue","baseConforms","baseCreate","proto","objectCreate","baseDelay","wait","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","isKey","baseHas","getPrototypeOf","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","caches","seen","baseInverter","baseInvoke","parent","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","isPartial","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","equalArrays","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIteratee","baseMatchesProperty","baseMatches","property","baseKeys","nativeKeys","baseKeysIn","baseMap","isArrayLike","getMatchData","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isPlainObject","toPlainObject","baseOrderBy","toIteratee","getIteratee","basePick","basePickBy","baseProperty","basePropertyDeep","basePullAll","basePullAllBy","basePullAt","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseSortedUniqBy","baseUniq","createSet","seenIndex","baseUnset","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","buffer","Ctor","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneMap","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","byteOffset","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","copyObjectWith","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","keysFunc","createBaseWrapper","wrapper","fn","isBind","arguments","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","deburr","thisBinding","createCurryWrapper","arity","getPlaceholder","createRecurryWrapper","createHybridWrapper","createFlow","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","createOver","arrayFunc","createPadding","chars","strLength","padLength","repeat","createPartialWrapper","createRange","toNumber","wrapFunc","isCurry","newArgPos","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","Math","precision","createWrapper","mergeData","baseSetData","isUnordered","arrValue","othValue","compared","arrayBufferTag","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","mapTag","convert","setTag","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","toPairs","isStrictComparable","getNative","isNative","objectToString","transforms","hasPath","hasFunc","isLength","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","replace","rePropName","quote","reEscapeChar","chunk","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","INFINITY","flattenDepth","fromPairs","pairs","head","initial","separator","nativeJoin","lastIndexOf","pullAll","pullAllBy","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperFlatMap","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","find","findLast","baseEachRight","flatMap","forEachRight","orderBy","reduceRight","reject","sample","sampleSize","rand","shuffle","some","after","before","curry","curryRight","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","now","delayed","remaining","stamp","flush","maxDelayed","debounced","leading","maxWait","leadingCall","flip","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","gt","gte","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNaN","isNumber","reIsNative","funcToString","reIsHostCtor","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","isSymbol","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","lt","lte","iteratorSymbol","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","NAN","toSafeInteger","symbolToString","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","toPairsIn","transform","unset","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","padEnd","padStart","parseInt","radix","nativeParseInt","reHasHexPrefix","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","toLower","toUpper","toUpperCase","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","times","toPath","uniqueId","prefix","idCounter","augend","addend","maxBy","mean","sum","min","minBy","subtract","minuend","subtrahend","sumBy","defaults","pick","contextProps","Date","Error","arrayProto","Buffer","moduleExports","Reflect","enumerate","getOwnPropertySymbols","ceil","floor","Set","WeakMap","metaMap","mapCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ctorString","count","HOT_SPAN","HOT_COUNT","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","groupBy","invokeMap","isProp","keyBy","partition","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","camelCase","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","round","extend","extendWith","each","eachRight","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsQuoteRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","parseFloat","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","thisGlobal","webpackPolyfill","deprecate","children"],"mappings":"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","file":"bin-string-search.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"binStringSearch\"] = factory();\n\telse\n\t\troot[\"binStringSearch\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tvar binStringSearch = {\n\t\tStringDigestor: __webpack_require__(1)\n\t};\n\t\n\texports.default = binStringSearch;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _ = __webpack_require__(2);\n\t\n\tvar phrasiphy = function phrasiphy(pString) {\n\t\treturn _.compact(pString.split(/[\\W]+/g)).join(' ');\n\t};\n\t\n\tvar StringDigestor = function () {\n\t\tfunction StringDigestor(config) {\n\t\t\t_classCallCheck(this, StringDigestor);\n\t\n\t\t\tthis.codes = 'abcdefghijklmnipqrstuvwxyz'.split('').concat(config || DEFAULT_CONFIG).slice(0, 32);\n\t\t}\n\t\n\t\t_createClass(StringDigestor, [{\n\t\t\tkey: 'find',\n\t\t\tvalue: function find(pString, index) {\n\t\t\t\tvar key = this.strToNum(pString);\n\t\t\t\tvar string = pString.toLowerCase();\n\t\t\t\tvar matches = [];\n\t\t\t\tfor (var i = 0; i < index.length; ++i) {\n\t\t\t\t\tif ((key & index[i].index) === key) {\n\t\t\t\t\t\tif (index[i].word.indexOf(string) !== -1) {\n\t\t\t\t\t\t\tmatches.push(index[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _.sortBy(matches, function (i) {\n\t\t\t\t\treturn i.order;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\n\t   * note - word by word indexing SLOWER than text search.\n\t   *\n\t   * @param pString\n\t   * @param index\n\t   * @returns {*}\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'findPhrase',\n\t\t\tvalue: function findPhrase(pString, index) {\n\t\t\t\tvar keys = this.phraseToNums(pString);\n\t\t\t\tvar lastKey = _.last(keys);\n\t\t\t\tvar firstKey = _.first(keys);\n\t\n\t\t\t\tvar simplePhrase = ' ' + phrasiphy(pString) + ' ';\n\t\n\t\t\t\tvar matches = [];\n\t\t\t\tfor (var i = 0; i < index.length; ++i) {\n\t\t\t\t\tvar item = index[i];\n\t\t\t\t\tif (item.maxIndex < lastKey) {\n\t\t\t\t\t\tconsole.log('max key too small for item ', item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (index[i].word.indexOf(simplePhrase) !== -1) {\n\t\t\t\t\t\tmatches.push(index[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _.sortBy(matches, function (item) {\n\t\t\t\t\treturn item.order;\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'findPhraseWithoutIndex',\n\t\t\tvalue: function findPhraseWithoutIndex(pString, index) {\n\t\t\t\tvar simplePhrase = ' ' + phrasiphy(pString) + ' ';\n\t\t\t\treturn index.filter(function (item) {\n\t\t\t\t\tif (item.word.indexOf(simplePhrase) !== -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}, []);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'findWithoutIndex',\n\t\t\tvalue: function findWithoutIndex(pString, index) {\n\t\t\t\tvar string = pString.toLowerCase();\n\t\n\t\t\t\treturn _.sortBy(index.filter(function (item) {\n\t\t\t\t\tif (item.word.indexOf(string) != -1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}, []), 'order');\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'phraseToNums',\n\t\t\tvalue: function phraseToNums(pText) {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tvar words = phrasiphy(pText).split(' ').filter(function (w) {\n\t\t\t\t\treturn w.length > 1;\n\t\t\t\t});\n\t\t\t\tvar indexes = words.map(function (word) {\n\t\t\t\t\treturn _this.strToNum(word);\n\t\t\t\t});\n\t\t\t\treturn _(indexes).uniq().sortBy(_.identity).value();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'strToNum',\n\t\t\tvalue: function strToNum(pText) {\n\t\t\t\tvar text = pText.toLowerCase();\n\t\t\t\tvar flags = [];\n\t\t\t\tfor (var i = 0; i < this.codes.length; ++i) {\n\t\t\t\t\tflags[i] = 0;\n\t\t\t\t}\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = text[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar t = _step.value;\n\t\n\t\t\t\t\t\tfor (var i = 0; i < this.tests.length; ++i) {\n\t\t\t\t\t\t\tif (!flags[i]) {\n\t\t\t\t\t\t\t\tflags[i] = this.tests[i](t, text, pText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tvar int = 0;\n\t\t\t\tfor (var i = 0; i < this.codes.length; ++i) {\n\t\t\t\t\tif (flags[i]) {\n\t\t\t\t\t\tvar newInt = int | 1 << i;\n\t\t\t\t\t\tif (newInt < 0) {\n\t\t\t\t\t\t\tconsole.log('went negative at index ', i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tint = newInt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//\tconsole.log('string: ', pText);\n\t\t\t\t//\tconsole.log('flags: ', flags.map((v) => v ? 1 : 0).join(''));\n\t\t\t\t//\tconsole.log('int: ', int);\n\t\n\t\t\t\treturn int;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'index',\n\t\t\tvalue: function index(data, pParams) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar params = pParams || {};\n\t\t\t\tvar phraseIndex = params.phrase;\n\t\t\t\tvar dataToString = params.dataToString || _.identity;\n\t\n\t\t\t\t/*     return _.sortBy(data.map((item, order) => {\n\t    let word = dataToString(item).toLowerCase();\n\t    var itemIndex = phraseIndex ? this.phraseToNums(word) : this.strToNum(word);\n\t    var out = {\n\t    item: item,\n\t    word: phraseIndex ? ` ${phrasiphy(word)} ` : word,\n\t    order: order,\n\t    index: itemIndex\n\t    };\n\t    if (phraseIndex) {\n\t    out.maxIndex = _.max(itemIndex);\n\t    }\n\t    return out;\n\t    }), (item) => phraseIndex ? item.maxIndex : item.index).reverse();*/\n\t\n\t\t\t\tvar out = _(data).reduce(function (goodItems, item, i) {\n\t\t\t\t\tvar word = dataToString(item);\n\t\t\t\t\tif (_.trim(word).length) {\n\t\t\t\t\t\tvar index = undefined;\n\t\n\t\t\t\t\t\tif (phraseIndex) {\n\t\t\t\t\t\t\tword = ' ' + word + ' ';\n\t\t\t\t\t\t\tindex = _this2.phraseToNums(word);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex = _this2.strToNum(word);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar summary = {\n\t\t\t\t\t\t\tword: word, order: i,\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\titem: item\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif (phraseIndex) {\n\t\t\t\t\t\t\tsummary.maxIndex = _.max(index);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tgoodItems.push(summary);\n\t\t\t\t\t}\n\t\t\t\t\treturn goodItems;\n\t\t\t\t}, []);\n\t\t\t\treturn _(out).sortBy(phraseIndex ? 'maxIndex' : 'index').reverse().value();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'codes',\n\t\t\tset: function set(code) {\n\t\t\t\tthis._code = code;\n\t\t\t\tthis.tests = code.map(function (code) {\n\t\t\t\t\treturn tests[code];\n\t\t\t\t});\n\t\t\t},\n\t\t\tget: function get() {\n\t\t\t\treturn this._code;\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn StringDigestor;\n\t}();\n\t\n\tStringDigestor.NONALPHANUM = 'NONALPHANUM';\n\tStringDigestor.NUMERIC = 'NUMERIC';\n\tStringDigestor.BRACES = 'BRACES';\n\tStringDigestor.PUNCTUATION = 'PUNCTUATION';\n\tStringDigestor.SPACE = 'SPACE';\n\tStringDigestor.LEAD1 = 'LEAD1';\n\tStringDigestor.LEAD2 = 'LEAD2';\n\tStringDigestor.LEAD3 = 'LEAD3+';\n\tStringDigestor.CAPS = 'CAPS';\n\t\n\tvar tests = {\n\t\ta: function a(t) {\n\t\t\treturn t.toLowerCase() === 'a';\n\t\t},\n\t\tb: function b(t) {\n\t\t\treturn t.toLowerCase() === 'b';\n\t\t},\n\t\tc: function c(t) {\n\t\t\treturn t.toLowerCase() === 'c';\n\t\t},\n\t\td: function d(t) {\n\t\t\treturn t.toLowerCase() === 'd';\n\t\t},\n\t\te: function e(t) {\n\t\t\treturn t.toLowerCase() === 'e';\n\t\t},\n\t\tf: function f(t) {\n\t\t\treturn t.toLowerCase() === 'f';\n\t\t},\n\t\tg: function g(t) {\n\t\t\treturn t.toLowerCase() === 'g';\n\t\t},\n\t\th: function h(t) {\n\t\t\treturn t.toLowerCase() === 'h';\n\t\t},\n\t\ti: function i(t) {\n\t\t\treturn t.toLowerCase() === 'i';\n\t\t},\n\t\tj: function j(t) {\n\t\t\treturn t.toLowerCase() === 'j';\n\t\t},\n\t\tk: function k(t) {\n\t\t\treturn t.toLowerCase() === 'k';\n\t\t},\n\t\tl: function l(t) {\n\t\t\treturn t.toLowerCase() === 'l';\n\t\t},\n\t\tm: function m(t) {\n\t\t\treturn t.toLowerCase() === 'm';\n\t\t},\n\t\tn: function n(t) {\n\t\t\treturn t.toLowerCase() === 'n';\n\t\t},\n\t\to: function o(t) {\n\t\t\treturn t.toLowerCase() === 'o';\n\t\t},\n\t\tp: function p(t) {\n\t\t\treturn t.toLowerCase() === 'p';\n\t\t},\n\t\tq: function q(t) {\n\t\t\treturn t.toLowerCase() === 'q';\n\t\t},\n\t\tr: function r(t) {\n\t\t\treturn t.toLowerCase() === 'r';\n\t\t},\n\t\ts: function s(t) {\n\t\t\treturn t.toLowerCase() === 's';\n\t\t},\n\t\tt: function t(_t) {\n\t\t\treturn _t.toLowerCase() === 't';\n\t\t},\n\t\tu: function u(t) {\n\t\t\treturn t.toLowerCase() === 'u';\n\t\t},\n\t\tv: function v(t) {\n\t\t\treturn t.toLowerCase() === 'v';\n\t\t},\n\t\tw: function w(t) {\n\t\t\treturn t.toLowerCase() === 'w';\n\t\t},\n\t\tx: function x(t) {\n\t\t\treturn t.toLowerCase() === 'x';\n\t\t},\n\t\ty: function y(t) {\n\t\t\treturn t.toLowerCase() === 'y';\n\t\t},\n\t\tz: function z(t) {\n\t\t\treturn t.toLowerCase() === 'z';\n\t\t},\n\t\tSPACE: function SPACE(t) {\n\t\t\treturn t === ' ';\n\t\t}\n\t};\n\t\n\tvar bre = /\\{\\}\\[\\]\\(\\)/;\n\ttests[StringDigestor.BRACES] = function (t) {\n\t\treturn bre.test(t);\n\t};\n\t\n\tvar nare = /\\W/;\n\tvar lead1re = /^1/;\n\tvar lead1re2 = /[\\D]+1/;\n\tvar lead2re = /^1/;\n\tvar lead2re2 = /[\\D]+1/;\n\tvar lead3re = /^[34567890]/;\n\tvar lead3re2 = /[\\D]+[34567890]/;\n\tvar nre = /\\d/;\n\tvar pre = /[~!@#$%^&*()_+-=`\\{\\}\\[\\]:\";'<>,./?\\`\\\\\\/]/;\n\t\n\ttests[StringDigestor.CAPS] = function (t) {\n\t\treturn t.toLowerCase() != t;\n\t};\n\ttests[StringDigestor.LEAD1] = function (t, s) {\n\t\treturn lead1re.test(s) || lead1re2.test(s);\n\t};\n\ttests[StringDigestor.LEAD2] = function (t, s) {\n\t\treturn lead2re.test(s) || lead2re2.test(s);\n\t};\n\ttests[StringDigestor.LEAD3] = function (t, s) {\n\t\treturn lead3re.test(s) || lead3re2.test(s);\n\t};\n\ttests[StringDigestor.NONALPHANUM] = function (t) {\n\t\treturn nare.test(t);\n\t};\n\ttests[StringDigestor.NUMERIC] = function (t) {\n\t\treturn nre.test(t);\n\t};\n\ttests[StringDigestor.PUNCTUATION] = function (t) {\n\t\treturn pre.test(t);\n\t};\n\ttests[StringDigestor.CAPS] = function (t, w, o) {\n\t\treturn o != w;\n\t};\n\t\n\tvar DEFAULT_CONFIG = [StringDigestor.NUMERIC, StringDigestor.SPACE, StringDigestor.PUNCTUATION, StringDigestor.NONALPHANUM];\n\t\n\tmodule.exports = StringDigestor;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 4.5.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash -d -o ./foo/lodash.js`\n\t * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.5.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+',\n\t    rsUpper + '+',\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n\t    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[mapTag] = cloneableTags[numberTag] =\n\t  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n\t  cloneableTags[setTag] = cloneableTags[stringTag] =\n\t  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n\t  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n\t  cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n\t    ? exports\n\t    : undefined;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n\t    ? module\n\t    : undefined;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = (freeModule && freeModule.exports === freeExports)\n\t    ? freeExports\n\t    : undefined;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal ||\n\t    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n\t      freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {...*} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * Creates a new array concatenating `array` with `other`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The first array to concatenate.\n\t   * @param {Array} other The second array to concatenate.\n\t   * @returns {Array} Returns the new concatenated array.\n\t   */\n\t  function arrayConcat(array, other) {\n\t    var index = -1,\n\t        length = array.length,\n\t        othIndex = -1,\n\t        othLength = other.length,\n\t        result = Array(length + othLength);\n\t\n\t    while (++index < length) {\n\t      result[index] = array[index];\n\t    }\n\t    while (++othIndex < othLength) {\n\t      result[index++] = other[othIndex];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    return !!array.length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includesWith` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t   * `comparator` to determine the extremum value.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The iteratee invoked per iteration.\n\t   * @param {Function} comparator The comparator used to compare values.\n\t   * @returns {*} Returns the extremum value.\n\t   */\n\t  function baseExtremum(array, iteratee, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          current = iteratee(value);\n\t\n\t      if (current != null && (computed === undefined\n\t            ? current === current\n\t            : comparator(current, computed)\n\t          )) {\n\t        var computed = current,\n\t            result = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.find` and `_.findKey`, without\n\t   * support for iteratee shorthands, which iterates over `collection` using\n\t   * `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFind(collection, predicate, eachFunc, retKey) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = retKey ? key : value;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define\n\t   * the sort order of `array` and replaces criteria objects with their\n\t   * corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` without support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the new array of key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Compares values to sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function compareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.orderBy` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t   * of corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * (order == 'desc' ? -1 : 1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a valid array-like index.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t   */\n\t  function isIndex(value, length) {\n\t    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t    length = length == null ? MAX_SAFE_INTEGER : length;\n\t    return value > -1 && value % 1 == 0 && value < length;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to mock `Date#getTime` use in `_.now`.\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        clearTimeout = context.clearTimeout,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getPrototypeOf = Object.getPrototypeOf,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var Map = getNative(context, 'Map'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var mapCtorString = Map ? funcToString.call(Map) : '',\n\t        setCtorString = Set ? funcToString.call(Set) : '',\n\t        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = Symbol ? symbolProto.valueOf : undefined,\n\t        symbolToString = Symbol ? symbolProto.toString : undefined;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chaining. Methods that operate on and return arrays, collections, and\n\t     * functions can be chained together. Methods that retrieve a single value or\n\t     * may return a primitive value will automatically end the chain sequence and\n\t     * return the unwrapped value. Otherwise, the value must be unwrapped with\n\t     * `_#value`.\n\t     *\n\t     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n\t     * may be enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization to merge iteratee calls; this avoids the creation\n\t     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n\t     * Sections of a chain sequence qualify for shortcut fusion if the section is\n\t     * applied to an array of at least two hundred elements and any iteratees\n\t     * accept only one argument. The heuristic for whether a section qualifies\n\t     * for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`, `difference`,\n\t     * `differenceBy`, `differenceWith`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flattenDepth`,\n\t     * `flip`, `flow`, `flowRight`, `fromPairs`, `functions`, `functionsIn`,\n\t     * `groupBy`, `initial`, `intersection`, `intersectionBy`, `intersectionWith`,\n\t     * `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`, `keys`, `keysIn`,\n\t     * `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`, `memoize`,\n\t     * `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`, `nthArg`,\n\t     * `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`, `overEvery`,\n\t     * `overSome`, `partial`, `partialRight`, `partition`, `pick`, `pickBy`, `plant`,\n\t     * `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`, `pullAt`, `push`,\n\t     * `range`, `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n\t     * `sampleSize`, `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`,\n\t     * `splice`, `spread`, `tail`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `toArray`, `toPairs`, `toPairsIn`,\n\t     * `toPath`, `toPlainObject`, `transform`, `unary`, `union`, `unionBy`,\n\t     * `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`, `unshift`, `unzip`,\n\t     * `unzipWith`, `values`, `valuesIn`, `without`, `wrap`, `xor`, `xorBy`,\n\t     * `xorWith`, `zip`, `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `endsWith`, `eq`,\n\t     * `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `floor`, `forEach`, `forEachRight`, `forIn`,\n\t     * `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`,\n\t     * `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`,\n\t     * `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n\t     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n\t     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,\n\t     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,\n\t     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,\n\t     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,\n\t     * `lt`, `lte`, `max`, `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `sample`,\n\t     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`,\n\t     * `sortedLastIndex`, `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`,\n\t     * `sum`, `sumBy`, `template`, `times`, `toLower`, `toInteger`, `toLength`,\n\t     * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,\n\t     * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,\n\t     * `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @returns {Object} Returns the new hash object.\n\t     */\n\t    function Hash() {}\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(hash, key) {\n\t      return hashHas(hash, key) && delete hash[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(hash, key) {\n\t      if (nativeCreate) {\n\t        var result = hash[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(hash, key) {\n\t      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function hashSet(hash, key, value) {\n\t      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function MapCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': Map ? new Map : [],\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapGet(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.get(key) : assocGet(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.has(key) : assocHas(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n\t      } else if (Map) {\n\t        data.map.set(key, value);\n\t      } else {\n\t        assocSet(data.map, key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a set cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.push(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The set cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function cacheHas(cache, value) {\n\t      var map = cache.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        return hash[value] === HASH_UNDEFINED;\n\t      }\n\t      return map.has(value);\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the set cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var map = this.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        hash[value] = HASH_UNDEFINED;\n\t      }\n\t      else {\n\t        map.set(value, HASH_UNDEFINED);\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function Stack(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = { 'array': [], 'map': null };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocDelete(array, key) : data.map['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocGet(array, key) : data.map.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocHas(array, key) : data.map.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache object.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      if (array) {\n\t        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n\t          assocSet(array, key, value);\n\t        } else {\n\t          data.array = null;\n\t          data.map = new MapCache(array);\n\t        }\n\t      }\n\t      var map = data.map;\n\t      if (map) {\n\t        map.set(key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Removes `key` and its value from the associative array.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function assocDelete(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = array.length - 1;\n\t      if (index == lastIndex) {\n\t        array.pop();\n\t      } else {\n\t        splice.call(array, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the associative array value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function assocGet(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      return index < 0 ? undefined : array[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if an associative array value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function assocHas(array, key) {\n\t      return assocIndexOf(array, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `key` is found in `array`\n\t     * of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the associative array `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function assocSet(array, key, value) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        array.push([key, value]);\n\t      } else {\n\t        array[index][1] = value;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function baseCastArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function baseCastFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function baseCastPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        assignValue(result, key, baseClone(subValue, isDeep, customizer, key, value, stack));\n\t      });\n\t      return isArr ? result : copySymbols(value, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support for\n\t     * excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && isArrayLikeObject(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return object == null ? object : baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return hasOwnProperty.call(object, key) ||\n\t        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        caches[othIndex] = !comparator && (iteratee || array.length >= 120)\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          length = array.length,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = baseCastPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n\t      }\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t      if (!isPartial) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack,\n\t              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\t\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      var type = typeof value;\n\t      if (type == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value &&\n\t            (value !== undefined || (key in Object(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      var props = (isArray(source) || isTypedArray(source))\n\t        ? undefined\n\t        : keysIn(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1,\n\t          toIteratee = getIteratee();\n\t\n\t      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), function(iteratee) {\n\t        return toIteratee(iteratee);\n\t      });\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property names.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key) {\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAll`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values) {\n\t      return basePullAllBy(array, values);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAllBy(array, values, iteratee) {\n\t      var index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (iteratee) {\n\t        seen = arrayMap(array, function(value) { return iteratee(value); });\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = baseIndexOf(seen, computed, fromIndex)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (lastIndex == length || index != previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = baseCastPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[last(path)];\n\t            }\n\t          }\n\t          else {\n\t            delete array[index];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array) {\n\t      return baseSortedUniqBy(array);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniqBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniqBy(array, iteratee) {\n\t      var index = 0,\n\t          length = array.length,\n\t          value = array[0],\n\t          computed = iteratee ? iteratee(value) : value,\n\t          seen = computed,\n\t          resIndex = 0,\n\t          result = [value];\n\t\n\t      while (++index < length) {\n\t        value = array[index],\n\t        computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!eq(computed, seen)) {\n\t          seen = computed;\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseCastPath(path);\n\t      object = parent(object, path);\n\t      var key = last(path);\n\t      return (object != null && has(object, key)) ? delete object[key] : true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property names.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var Ctor = buffer.constructor,\n\t          result = new Ctor(buffer.length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var Ctor = arrayBuffer.constructor,\n\t          result = new Ctor(arrayBuffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map) {\n\t      var Ctor = map.constructor;\n\t      return arrayReduce(mapToArray(map), addMapEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var Ctor = regexp.constructor,\n\t          result = new Ctor(regexp.source, reFlags.exec(regexp));\n\t\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set) {\n\t      var Ctor = set.constructor;\n\t      return arrayReduce(setToArray(set), addSetEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return Symbol ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var arrayBuffer = typedArray.buffer,\n\t          buffer = isDeep ? cloneArrayBuffer(arrayBuffer) : arrayBuffer,\n\t          Ctor = typedArray.constructor;\n\t\n\t      return new Ctor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object) {\n\t      return copyObjectWith(source, props, object);\n\t    }\n\t\n\t    /**\n\t     * This function is like `copyObject` except that it accepts a function to\n\t     * customize copied values.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObjectWith(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = typeof customizer == 'function'\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols ? strSymbols[0] : string.charAt(0),\n\t            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string)), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getPlaceholder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getPlaceholder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new invoker function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = arrayMap(baseFlatten(iteratees, 1), getIteratee());\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars === undefined ? ' ' : (chars + '');\n\t\n\t      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? stringToArray(result).slice(0, padLength).join('')\n\t        : result.slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newArgPos = argPos ? copyArray(argPos) : undefined,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, newArgPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = toInteger(precision);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var index = -1,\n\t          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isUnordered) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return (isPartial || object.size == other.size) &&\n\t            equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\t\n\t        case symbolTag:\n\t          return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * `baseIteratee`. If arguments are provided the chosen function is invoked\n\t     * with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = toPairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getPlaceholder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = getOwnPropertySymbols || function() {\n\t      return [];\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n\t    if ((Map && getTag(new Map) != mapTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : null,\n\t            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case mapCtorString: return mapTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasFunc(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = baseCastPath(path);\n\t        object = parent(object, path);\n\t        if (object != null) {\n\t          path = last(path);\n\t          result = hasFunc(object, path);\n\t        }\n\t      }\n\t      var length = object ? object.length : undefined;\n\t      return result || (\n\t        !!length && isLength(length) && isIndex(path, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object))\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (isFunction(object.constructor) && !isPrototype(object))\n\t        ? baseCreate(getPrototypeOf(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (typeof value == 'number') {\n\t        return true;\n\t      }\n\t      return !isArray(value) &&\n\t        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t          (object != null && value in Object(object)));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return type == 'number' || type == 'boolean' ||\n\t        (type == 'string' && value != '__proto__') || value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (isFunction(Ctor) && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * modify function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = copyArray(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function stringToPath(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=0] The length of each chunk.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size) {\n\t      size = nativeMax(toInteger(size), 0);\n\t\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var concat = rest(function(array, values) {\n\t      if (!isArray(array)) {\n\t        array = array == null ? [] : [Object(array)];\n\t      }\n\t      values = baseFlatten(values, 1);\n\t      return arrayConcat(array, values);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([3, 2, 1], [4, 2]);\n\t     * // => [3, 1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n\t     * // => [3.1, 1.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3))\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n\t     * from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      fromIndex = toInteger(fromIndex);\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return baseIndexOf(array, value, fromIndex);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [4, 2], [1, 2]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, baseCastArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pullAll(array, [2, 3]);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAllBy(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = arrayMap(baseFlatten(indexes, 1), String);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(compareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n\t     * to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 5], 4);\n\t     * // => 0\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n\t     *\n\t     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([1, 1, 2, 2], 2);\n\t     * // => 2\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5], 4);\n\t     * // => 1\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniqBy(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2, 1], [4, 2], [1, 2]);\n\t     * // => [2, 1, 4]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1, 1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property names and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n\t     * The result of such method chaining must be unwrapped with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     *\n\t     * _(['a', 'b', 'c']).at(0, 2).value();\n\t     * // => ['a', 'c']\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.flatMap`.\n\t     *\n\t     * @name flatMap\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _([1, 2]).flatMap(duplicate).value();\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function wrapperFlatMap(iteratee) {\n\t      return this.map(iteratee).flatten();\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    function find(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    function findLast(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate, true);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of flattened values by running each element in `collection`\n\t     * through `iteratee` and concating its result to the other mapped values.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n\t     * for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `1` then `2`\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEach(collection, iteratee)\n\t        : baseEach(collection, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `2` then `1`\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEachRight(collection, iteratee)\n\t        : baseEachRight(collection, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of elements responsible for generating the key.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n\t     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it's\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n\t     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n\t     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n\t     * and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=0] The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = baseClamp(toInteger(n), 0, length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by, specified individually or in arrays.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Function}\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = Date.now;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getPlaceholder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getPlaceholder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          leading = false,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function flush() {\n\t        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        cancel();\n\t        return result;\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!lastCalled && !maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled);\n\t\n\t          var isCalled = (remaining <= 0 || remaining > maxWait) &&\n\t            (leading || maxTimeoutId);\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = arrayMap(baseFlatten(transforms, 1), getIteratee());\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getPlaceholder(partial));\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getPlaceholder(partialRight));\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = args.slice(0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Function}\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null &&\n\t        !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? constant(false) : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it's an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) ||\n\t            isFunction(value.splice) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MAX_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(3.14);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array constructors, and\n\t      // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values. This method is\n\t     * equivalent to a `_.matches` function when `source` is partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(funcToString.call(value));\n\t      }\n\t      return isObjectLike(value) &&\n\t        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototypeOf(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      var remainder = value % 1;\n\t      return value === value ? (remainder ? value - remainder : value) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3);\n\t     * // => 3\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3');\n\t     * // => 3\n\t     */\n\t    function toNumber(value) {\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string if it's not one. An empty string is returned\n\t     * for `null` and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return Symbol ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source objects to the destination\n\t     * object. Source objects are applied from left to right. Subsequent sources\n\t     * overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      copyObject(source, keys(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     *\n\t     * _.at(['a', 'b', 'c'], 0, 2);\n\t     * // => ['a', 'c']\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a `properties`\n\t     * object is given its own enumerable properties are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable properties of source objects to the\n\t     * destination object for all destination properties that resolve to `undefined`.\n\t     * Source objects are applied from left to right. Once a property is set,\n\t     * additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, baseCastFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, baseCastFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by\n\t     * explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, baseCastFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` through `iteratee`.\n\t     * The corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`. The iteratee is invoked with\n\t     * three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee is invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Recursively merges own and inherited enumerable properties of source objects\n\t     * into the destination object. Source properties that resolve to `undefined`\n\t     * are skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined` merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to omit, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), String);\n\t      return basePick(object, baseDifference(keysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable properties of `object` that `predicate`\n\t     * doesn't return truthy for. The predicate is invoked with two arguments:\n\t     * (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to pick, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, baseFlatten(props, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it's invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      if (!isKey(path, object)) {\n\t        path = baseCastPath(path);\n\t        var result = get(object, path);\n\t        object = parent(object, path);\n\t      } else {\n\t        result = object == null ? undefined : object[path];\n\t      }\n\t      if (result === undefined) {\n\t        result = defaultValue;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.setWith({ '0': { 'length': 2 } }, '[0][1][2]', 3, Object);\n\t     * // => { '0': { '1': { '2': 3 }, 'length': 2 } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable key-value pairs for `object` which\n\t     * can be consumed by `_.fromPairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairs(object) {\n\t      return baseToPairs(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable key-value pairs for\n\t     * `object` which can be consumed by `_.fromPairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairsIn(object) {\n\t      return baseToPairs(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototypeOf(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n\t     * a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = typeof target == 'string' ? target : (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      return string + createPadding(string, length, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      return createPadding(string, length, chars) + string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      string = toString(string);\n\t      n = toInteger(n);\n\t\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the new array of string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      return toString(string).split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + capitalize(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar');\n\t     * // => '--foo-bar'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar');\n\t     * // => '--FOO-BAR'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars);\n\t\n\t      return strSymbols\n\t        .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols\n\t        .slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1)\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols\n\t        .slice(charsStartIndex(strSymbols, stringToArray(chars)))\n\t        .join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options=({})] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? toString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? strSymbols.slice(0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, 'onClick');\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => logs 'clicked docs' when clicked\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` invoking the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name the created callback returns the\n\t     * property value for a given element. If `func` is an object the created\n\t     * callback returns `true` for elements that contain the equivalent object\n\t     * properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n\t     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n\t     *   return !p ? callback(func) : function(object) {\n\t     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age > 36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`. The created function is equivalent to\n\t     * `_.isMatch` with a `source` partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns its nth argument.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     *\n\t     * func('a', 'b', 'c');\n\t     * // => 'b'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return function() {\n\t        return arguments[n];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments provided\n\t     * to the created function and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over(Math.max, Math.min);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(true));\n\t     * // => [true, true, true, true]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = baseCastFunction(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     *\n\t     * var path = ['a', 'b', 'c'],\n\t     *     newPath = _.toPath(path);\n\t     *\n\t     * console.log(newPath);\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * console.log(path === newPath);\n\t     * // => false\n\t     */\n\t    function toPath(value) {\n\t      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      var result;\n\t      if (augend === undefined && addend === undefined) {\n\t        return 0;\n\t      }\n\t      if (augend !== undefined) {\n\t        result = augend;\n\t      }\n\t      if (addend !== undefined) {\n\t        result = result === undefined ? addend : (result + addend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return sum(array) / (array ? array.length : 0);\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    function subtract(minuend, subtrahend) {\n\t      var result;\n\t      if (minuend === undefined && subtrahend === undefined) {\n\t        return 0;\n\t      }\n\t      if (minuend !== undefined) {\n\t        result = minuend;\n\t      }\n\t      if (subtrahend !== undefined) {\n\t        result = result === undefined ? subtrahend : (result - subtrahend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Avoid inheriting from `Object.prototype` when possible.\n\t    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\t\n\t    // Add functions to the `MapCache`.\n\t    MapCache.prototype.clear = mapClear;\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `SetCache`.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Add functions to the `Stack` cache.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.flatMap = wrapperFlatMap;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose lodash on the free variable `window` or `self` when available. This\n\t  // prevents errors in cases where lodash is loaded by a script tag in the presence\n\t  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t  (freeWindow || freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)(module), (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=bin-string-search.js.map"],"sourceRoot":"/source/"}